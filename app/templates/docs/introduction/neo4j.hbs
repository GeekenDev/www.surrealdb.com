<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.introduction">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.introduction.neo4j">SurrealDB for Neo4j developers</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>Neo4j to SurrealDB mapping</h2>
	<p>Quickly learn how to map your Neo4j knowledge to corresponding SurrealDB concepts and syntax.</p>
</Layout::Text>

<Layout::Gap mini />

<h3>Introduction</h3>
<p>
    As a multi-model database, SurrealDB offers a lot of flexibility.
    Our SQL-like query language SurrealQL is a good example of this, where we often have more than one way to achieve the same result, depending on developer preference.
    In this mapping guide, we will focus on the syntax that most closely resembles the Cypher query language.
</p>

<h3>Concepts mapping</h3>
<p>
    For more in-depth explanations of SurrealDB concepts, see the <Link @link="docs.introduction.concepts">concepts page.</Link>
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>Neo4j</th>
				<th w-50>SurrealDB</th>
			</tr>
		</thead>
		<tbody>
            <tr>
                <td>database</td>
                <td><Link @link="docs.surrealql.statements.define.database">database</Link></td>
            </tr>
            <tr>
                <td>node label</td>
                <td><Link @link="docs.surrealql.statements.define.table">table</Link></td>
            </tr>
            <tr>
                <td>node</td>
                <td><Link @link="docs.surrealql.datamodel.ids">record</Link></td>
            </tr>
            <tr>
                <td>node property</td>
                <td><Link @link="docs.surrealql.statements.define.field">field</Link></td>
            </tr>
            <tr>
                <td>index</td>
                <td><Link @link="docs.surrealql.statements.define.index">index</Link></td>
            </tr>
            <tr>
                <td>id</td>
                <td><Link @link="docs.surrealql.datamodel.ids">record id</Link></td>
            </tr>
            <tr>
                <td>transaction</td>
                <td><Link @link="docs.surrealql.statements.begin">transaction</Link></td>
            </tr>
            <tr>
                <td>relationships</td>
                <td><Link @link="docs.surrealql.datamodel.records">record links</Link>, embedding and <Link @link="docs.surrealql.statements.relate">graph relations</Link></td>
            </tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<h3>Syntax mapping</h3>
<p>
    Let's get you up to speed with SurrealQL syntax with some CRUD examples.
</p>

<h3>Create</h3>
<p>
    As Neo4j is schemaless, only the SurrealQL schemaless approach is shown below.
    For a schemafull option see the <Link @link="docs.surrealql.statements.define.table">define table</Link> page.
</p>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.create">create</Link>
    and <Link @link="docs.surrealql.statements.insert">insert</Link> pages.
</p>

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>Cypher</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-create.surql">
                        db.createCollection("person")
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-create-person.surql">
                        CREATE person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-insert-one.surql">
                        db.person.insertOne({
                            name: "John"
                        })
                    </Code>
                    <p>Collection implicitly created if it doesn't exist</p>
				</td>
				<td>
                    <Code @name="docs-surrealql-insert-one.surql">
                        INSERT INTO person {
                            name: "John"
                        }
                    </Code>
                    <p>Table implicitly created if it doesn't exist</p>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-insert-many.surql">
                        db.person.insertMany([
                            {name: "John"},
                            {name: "Jane"},
                        ])
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-insert-many.surql">
                        INSERT INTO person [
                            {name: "John"},
                            {name: "Jane"}
                        ]
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-index.surql">
                        db.person.createIndex({name: 1})
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-index-name.surql">
                        DEFINE INDEX personNameIndex
                        ON TABLE person COLUMNS name
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>


<Layout::Gap small />

<h3>Read</h3>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.select">select</Link>,
    <Link @link="docs.surrealql.statements.live-select">live select</Link>
    and <Link @link="docs.surrealql.statements.return">return</Link> pages.
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>Cypher</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-find-all.surql">
                        MATCH (person)
                        RETURN person
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-all.surql">
                        SELECT *
                        FROM person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-find-person.surql">
                        MATCH (person)
                        RETURN person.name
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-name.surql">
                        SELECT name
                        FROM person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-find-where.surql">
                        MATCH (person)
                        WHERE person.name = "Jane"
                        RETURN person.name
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-where.surql">
                        SELECT name
                        FROM person
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-find-explain.surql">
                        EXPLAIN
                        MATCH (person)
                        WHERE person.name = "Jane"
                        RETURN person.name
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-explain-person.surql">
                        SELECT name
                        FROM person
                        WHERE name = "Jane"
                        EXPLAIN
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-count.surql">
                        MATCH (person)
                        RETURN count(*) as person_count
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-count-person.surql">
                        SELECT count() AS person_count
                        FROM person
                        GROUP ALL
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-distinct.surql">
                        MATCH (person)
                        RETURN distinct person.name
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-distinct-person.surql">
                        SELECT array::distinct(name)
                        FROM person
                        GROUP ALL
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-limit.surql">
                        MATCH (person)
                        RETURN person
                        LIMIT 10
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-limit-person.surql">
                        SELECT *
                        FROM person
                        LIMIT 10
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-lookup.surql">
                        db.review.aggregate([{
                            "$lookup": {
                                "from": "person",
                                "localField": "person",
                                "foreignField": "_id",
                                "as": "person_detail"
                            }
                        }])
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-record-link-person.surql">
                        SELECT *,
                        person.* as person_detail
                        FROM review
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<h3>Update</h3>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.update">update</Link> page.
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>Cypher</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-update-one.surql">
                        db.person.updateMany(
                            { name: "Jane" },
                            { $set: { last_name: "Doe" } }
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-update-one.surql">
                        UPDATE person
                        SET last_name = "Doe"
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-update-many.surql">
                        db.person.updateMany(
                            { name: "Jane" },
                            { $unset: { last_name: 1 } }
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-update-many.surql">
                        UPDATE person
                        UNSET last_name
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<h3>Delete</h3>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.delete">delete</Link>
    and <Link @link="docs.surrealql.statements.remove">remove</Link> pages.
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>Cypher</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-delete.surql">
                        db.person.deleteMany(
                            { name: "Jane" }
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-delete-person.surql">
                        DELETE person
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-delete-all.surql">
                        db.person.deleteMany({})
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-delete-all.surql">
                        DELETE person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-cypher-remove.surql">
                        db.person.drop()
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-remove-person.surql">
                        REMOVE TABLE person
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap large />